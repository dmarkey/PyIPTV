[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pyiptv"
version = "1.0.0"
description = "A modern IPTV player built with PySide6"
readme = "README.md"
license = "MIT"
authors = [
    {name = "David Markey", email = "david@dmarkey.com"}
]
maintainers = [
    {name = "David Markey", email = "david@dmarkey.com"}
]
keywords = [
    "iptv",
    "player",
    "streaming",
    "media",
    "m3u",
    "pyside6",
    "qt"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Video :: Display",
    "Environment :: X11 Applications :: Qt",
]
requires-python = ">=3.8"
dependencies = [
    "PySide6>=6.5.0",
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-qt>=4.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "black>=23.0",
    "isort>=5.12",
    "flake8>=6.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]
test = [
    "pytest>=7.0",
    "pytest-qt>=4.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
]
docs = [
    "sphinx>=6.0",
    "sphinx-rtd-theme>=1.2",
    "sphinx-autodoc-typehints>=1.20",
]
all = [
    "pyiptv[dev,test,docs]",
]

[project.urls]
Homepage = "https://github.com/dmarkey/PyIPTV"
Repository = "https://github.com/dmarkey/PyIPTV"
Issues = "https://github.com/dmarkey/PyIPTV/issues"
Documentation = "https://github.com/dmarkey/PyIPTV#readme"

[project.scripts]
pyiptv = "pyiptv.main:main"

[tool.setuptools.packages.find]
include = ["pyiptv*"]

[tool.setuptools.package-data]
pyiptv = ["ui/images/*.png", "ui/images/*.ico", "ui/images/*.svg"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pyiptv"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --cov=pyiptv --cov-report=html --cov-report=term-missing"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "ui: UI tests requiring Qt",
    "slow: Slow tests",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "PySide6.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["pyiptv"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]